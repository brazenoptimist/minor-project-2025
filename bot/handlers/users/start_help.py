import logging

from aiogram import Router, types
from aiogram.filters import CommandStart
from bot.keyboards.inline import build_initial_survey_keyboard
import os
import random
from aiogram.types import FSInputFile

router = Router(name=__name__)
logger = logging.getLogger()


def get_random_image():
    images_dir = "bot/images"
    if not os.path.exists(images_dir):
        return None
        
    images = [f for f in os.listdir(images_dir) if f.endswith(('.jpg', '.jpeg', '.png'))]
    if not images:
        return None
        
    random_image = random.choice(images)
    return FSInputFile(os.path.join(images_dir, random_image))

@router.message(CommandStart())
async def start(message: types.Message) -> None:
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ images
    images_dir = "bot/images"
    images = [f for f in os.listdir(images_dir) if f.endswith(('.jpg', '.jpeg', '.png'))]
    
    if images:
        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        random_image = random.choice(images)
        image_path = os.path.join(images_dir, random_image)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—å—é
        await message.answer_photo(
            photo=FSInputFile(image_path),
            caption="""üëã <b>–ü—Ä–∏–≤–µ—Ç!</b>

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏ –∏ –ø–æ–ª—É—á–∏—Ç—å <b>–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</b> üåü

üîç <b>–ß—Ç–æ —Ç–∞–∫–æ–µ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å?</b>
–≠—Ç–æ –æ—â—É—â–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è, –±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–∞ –∏–ª–∏ —Å—Ç—Ä–∞—Ö–∞, –∫–æ—Ç–æ—Ä–æ–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –∫–∞–∫ —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ —Å—Ç—Ä–µ—Å—Å–æ–≤—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏. 
‚Ä¢ –£–º–µ—Ä–µ–Ω–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å ‚Äî —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ üòå
‚Ä¢ –ù–æ –µ—Å–ª–∏ —Ç—Ä–µ–≤–æ–≥–∞ –º–µ—à–∞–µ—Ç —É—á—ë–±–µ, —Å–Ω—É –∏–ª–∏ –æ–±—â–µ–Ω–∏—é ‚Äî —Å—Ç–æ–∏—Ç –æ–±—Ä–∞—Ç–∏—Ç—å –Ω–∞ —ç—Ç–æ –≤–Ω–∏–º–∞–Ω–∏–µ ‚ö†Ô∏è

üß† <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</b>
–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–¥–µ–ª—å –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è, –æ–±—É—á–µ–Ω–Ω—É—é –Ω–∞ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ (<a href="https://www.kaggle.com/datasets/sonia22222/students-mental-health-assessments/data">–∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</a>), —á—Ç–æ–±—ã:
‚úÖ –û—Ü–µ–Ω–∏—Ç—å —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏
‚úÖ –î–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
‚úÖ –ü–æ–º–æ—á—å —É–ª—É—á—à–∏—Ç—å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ üíÜ‚Äç‚ôÄÔ∏è

‚ùó <b>–í–∞–∂–Ω–æ:</b>
–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ —è–≤–ª—è—é—Ç—Å—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º –¥–∏–∞–≥–Ω–æ–∑–æ–º. 
–ï—Å–ª–∏ —Ç—ã –æ—â—É—â–∞–µ—à—å <b>–≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏</b>, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É üë©‚Äç‚öïÔ∏è

‚è≥ –ê–Ω–∫–µ—Ç–∞ –∑–∞–π–º–µ—Ç –≤—Å–µ–≥–æ <b>2-3 –º–∏–Ω—É—Ç—ã</b> (17 –≤–æ–ø—Ä–æ—Å–æ–≤)
üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–∏—à—å <b>–º–≥–Ω–æ–≤–µ–Ω–Ω–æ</b>

<b>–ì–æ—Ç–æ–≤(–∞) –Ω–∞—á–∞—Ç—å?</b> üöÄ
    """,
            reply_markup=build_initial_survey_keyboard(),
            parse_mode="HTML",
        )
    else:
        await message.answer(
            text="""
–ü—Ä–∏–≤–µ—Ç!

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç—ã —Ç—Ä–µ–≤–æ–∂–µ–Ω(–∞)...
            """,
            reply_markup=build_initial_survey_keyboard()
        )

